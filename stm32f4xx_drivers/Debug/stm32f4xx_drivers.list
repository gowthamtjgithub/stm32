
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007cc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000974  0800097c  0001097c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000974  08000974  0001097c  2**0
                  CONTENTS
  4 .ARM          00000000  08000974  08000974  0001097c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000974  0800097c  0001097c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000974  08000974  00010974  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000978  08000978  00010978  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001097c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001097c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001097c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001b89  00000000  00000000  000109ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000048a  00000000  00000000  00012535  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000129c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000a0  00000000  00000000  00012a88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000022ed  00000000  00000000  00012b28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000011c6  00000000  00000000  00014e15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009672  00000000  00000000  00015fdb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001f64d  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000288  00000000  00000000  0001f6a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800095c 	.word	0x0800095c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800095c 	.word	0x0800095c

080001e8 <main>:
void delay(void){
	for(uint32_t i=0; i<50000/2; i++);
}

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b084      	sub	sp, #16
 80001ec:	af00      	add	r7, sp, #0

	GPIO_Handle_t GPIOLed, GPIOBtn;

	memset(&GPIOLed,0,sizeof(GPIOLed));
 80001ee:	f107 0308 	add.w	r3, r7, #8
 80001f2:	2208      	movs	r2, #8
 80001f4:	2100      	movs	r1, #0
 80001f6:	4618      	mov	r0, r3
 80001f8:	f000 fba8 	bl	800094c <memset>
	memset(&GPIOBtn,0, sizeof(GPIOBtn));
 80001fc:	463b      	mov	r3, r7
 80001fe:	2208      	movs	r2, #8
 8000200:	2100      	movs	r1, #0
 8000202:	4618      	mov	r0, r3
 8000204:	f000 fba2 	bl	800094c <memset>

	GPIOLed.pGPIO_PinConfig->GPIO_PinNumber = GPIO_PIN_6;
 8000208:	68fb      	ldr	r3, [r7, #12]
 800020a:	2206      	movs	r2, #6
 800020c:	701a      	strb	r2, [r3, #0]
	GPIOLed.pGPIO_PinConfig->GPIO_PinMode = GPIO_MODE_OUT;
 800020e:	68fb      	ldr	r3, [r7, #12]
 8000210:	2201      	movs	r2, #1
 8000212:	705a      	strb	r2, [r3, #1]
	GPIOLed.pGPIO_PinConfig->GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000214:	68fb      	ldr	r3, [r7, #12]
 8000216:	2200      	movs	r2, #0
 8000218:	709a      	strb	r2, [r3, #2]
	GPIOLed.pGPIO_PinConfig->GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800021a:	68fb      	ldr	r3, [r7, #12]
 800021c:	2200      	movs	r2, #0
 800021e:	711a      	strb	r2, [r3, #4]
	GPIOLed.pGPIO_PinConfig->GPIO_PinPupdControl = GPIO_NO_PUPD;
 8000220:	68fb      	ldr	r3, [r7, #12]
 8000222:	2200      	movs	r2, #0
 8000224:	70da      	strb	r2, [r3, #3]

	GPIO_PeriClockControl(GPIOA,ENABLE);
 8000226:	2101      	movs	r1, #1
 8000228:	4812      	ldr	r0, [pc, #72]	; (8000274 <main+0x8c>)
 800022a:	f000 f85f 	bl	80002ec <GPIO_PeriClockControl>

	GPIO_Init(&GPIOLed);
 800022e:	f107 0308 	add.w	r3, r7, #8
 8000232:	4618      	mov	r0, r3
 8000234:	f000 f8e2 	bl	80003fc <GPIO_Init>


	GPIOBtn.pGPIO_PinConfig->GPIO_PinNumber = GPIO_PIN_4;
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	2204      	movs	r2, #4
 800023c:	701a      	strb	r2, [r3, #0]
	GPIOBtn.pGPIO_PinConfig->GPIO_PinMode = GPIO_MODE_IN;
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	2200      	movs	r2, #0
 8000242:	705a      	strb	r2, [r3, #1]
	GPIOBtn.pGPIO_PinConfig->GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	2202      	movs	r2, #2
 8000248:	709a      	strb	r2, [r3, #2]
	GPIOBtn.pGPIO_PinConfig->GPIO_PinPupdControl = GPIO_PIN_PU;
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	2201      	movs	r2, #1
 800024e:	70da      	strb	r2, [r3, #3]

	GPIO_PeriClockControl(GPIOE,ENABLE);
 8000250:	2101      	movs	r1, #1
 8000252:	4809      	ldr	r0, [pc, #36]	; (8000278 <main+0x90>)
 8000254:	f000 f84a 	bl	80002ec <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 8000258:	463b      	mov	r3, r7
 800025a:	4618      	mov	r0, r3
 800025c:	f000 f8ce 	bl	80003fc <GPIO_Init>



		GPIO_IRQPriorityConfig(IRQ_NO_EXTI4,NVIC_IRQ_PRI4 );
 8000260:	210a      	movs	r1, #10
 8000262:	200a      	movs	r0, #10
 8000264:	f000 fb00 	bl	8000868 <GPIO_IRQPriorityConfig>

		GPIO_IRQConfig(IRQ_NO_EXTI4, ENABLE);
 8000268:	2101      	movs	r1, #1
 800026a:	200a      	movs	r0, #10
 800026c:	f000 fa76 	bl	800075c <GPIO_IRQConfig>

		while(1);
 8000270:	e7fe      	b.n	8000270 <main+0x88>
 8000272:	bf00      	nop
 8000274:	40020000 	.word	0x40020000
 8000278:	40021000 	.word	0x40021000

0800027c <EXTI4_IRQHandler>:





void EXTI4_IRQHandler(void){
 800027c:	b580      	push	{r7, lr}
 800027e:	af00      	add	r7, sp, #0
	//handle the interrupt
	GPIO_IRQHandling(GPIO_PIN_4);
 8000280:	2004      	movs	r0, #4
 8000282:	f000 fb1f 	bl	80008c4 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_6);
 8000286:	2106      	movs	r1, #6
 8000288:	4802      	ldr	r0, [pc, #8]	; (8000294 <EXTI4_IRQHandler+0x18>)
 800028a:	f000 fa51 	bl	8000730 <GPIO_ToggleOutputPin>
}
 800028e:	bf00      	nop
 8000290:	bd80      	pop	{r7, pc}
 8000292:	bf00      	nop
 8000294:	40020c00 	.word	0x40020c00

08000298 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000298:	480d      	ldr	r0, [pc, #52]	; (80002d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800029c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a0:	480c      	ldr	r0, [pc, #48]	; (80002d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a2:	490d      	ldr	r1, [pc, #52]	; (80002d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a4:	4a0d      	ldr	r2, [pc, #52]	; (80002dc <LoopForever+0xe>)
  movs r3, #0
 80002a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a8:	e002      	b.n	80002b0 <LoopCopyDataInit>

080002aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ae:	3304      	adds	r3, #4

080002b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b4:	d3f9      	bcc.n	80002aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b6:	4a0a      	ldr	r2, [pc, #40]	; (80002e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b8:	4c0a      	ldr	r4, [pc, #40]	; (80002e4 <LoopForever+0x16>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002bc:	e001      	b.n	80002c2 <LoopFillZerobss>

080002be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c0:	3204      	adds	r2, #4

080002c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c4:	d3fb      	bcc.n	80002be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c6:	f000 fb1d 	bl	8000904 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ca:	f7ff ff8d 	bl	80001e8 <main>

080002ce <LoopForever>:

LoopForever:
    b LoopForever
 80002ce:	e7fe      	b.n	80002ce <LoopForever>
  ldr   r0, =_estack
 80002d0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002dc:	0800097c 	.word	0x0800097c
  ldr r2, =_sbss
 80002e0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e4:	2000001c 	.word	0x2000001c

080002e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e8:	e7fe      	b.n	80002e8 <ADC_IRQHandler>
	...

080002ec <GPIO_PeriClockControl>:
 * @return			- none
 *
 * @Note			- none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002ec:	b480      	push	{r7}
 80002ee:	b083      	sub	sp, #12
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
 80002f4:	460b      	mov	r3, r1
 80002f6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002f8:	78fb      	ldrb	r3, [r7, #3]
 80002fa:	2b01      	cmp	r3, #1
 80002fc:	d136      	bne.n	800036c <GPIO_PeriClockControl+0x80>
	{
		if(pGPIOx == GPIOA)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a38      	ldr	r2, [pc, #224]	; (80003e4 <GPIO_PeriClockControl+0xf8>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000306:	4b38      	ldr	r3, [pc, #224]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a37      	ldr	r2, [pc, #220]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 800030c:	f043 0301 	orr.w	r3, r3, #1
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOE)
		{
			GPIOE_PCLK_DI();
		}
	}
}
 8000312:	e061      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOB)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a35      	ldr	r2, [pc, #212]	; (80003ec <GPIO_PeriClockControl+0x100>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800031c:	4b32      	ldr	r3, [pc, #200]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a31      	ldr	r2, [pc, #196]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 8000322:	f043 0302 	orr.w	r3, r3, #2
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e056      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOC)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a30      	ldr	r2, [pc, #192]	; (80003f0 <GPIO_PeriClockControl+0x104>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000332:	4b2d      	ldr	r3, [pc, #180]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a2c      	ldr	r2, [pc, #176]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 8000338:	f043 0304 	orr.w	r3, r3, #4
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e04b      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOD)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a2c      	ldr	r2, [pc, #176]	; (80003f4 <GPIO_PeriClockControl+0x108>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000348:	4b27      	ldr	r3, [pc, #156]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a26      	ldr	r2, [pc, #152]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 800034e:	f043 0308 	orr.w	r3, r3, #8
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e040      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOE)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a27      	ldr	r2, [pc, #156]	; (80003f8 <GPIO_PeriClockControl+0x10c>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d13c      	bne.n	80003d8 <GPIO_PeriClockControl+0xec>
			GPIOE_PCLK_EN();
 800035e:	4b22      	ldr	r3, [pc, #136]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a21      	ldr	r2, [pc, #132]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 8000364:	f043 0310 	orr.w	r3, r3, #16
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e035      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		if(pGPIOx == GPIOA)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a1d      	ldr	r2, [pc, #116]	; (80003e4 <GPIO_PeriClockControl+0xf8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0x96>
			GPIOA_PCLK_DI();
 8000374:	4b1c      	ldr	r3, [pc, #112]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a1b      	ldr	r2, [pc, #108]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 800037a:	f023 0301 	bic.w	r3, r3, #1
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000380:	e02a      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOB)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a19      	ldr	r2, [pc, #100]	; (80003ec <GPIO_PeriClockControl+0x100>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d106      	bne.n	8000398 <GPIO_PeriClockControl+0xac>
			GPIOB_PCLK_DI();
 800038a:	4b17      	ldr	r3, [pc, #92]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a16      	ldr	r2, [pc, #88]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 8000390:	f023 0302 	bic.w	r3, r3, #2
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000396:	e01f      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOC)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a15      	ldr	r2, [pc, #84]	; (80003f0 <GPIO_PeriClockControl+0x104>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0xc2>
			GPIOC_PCLK_DI();
 80003a0:	4b11      	ldr	r3, [pc, #68]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a10      	ldr	r2, [pc, #64]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 80003a6:	f023 0304 	bic.w	r3, r3, #4
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ac:	e014      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOD)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a10      	ldr	r2, [pc, #64]	; (80003f4 <GPIO_PeriClockControl+0x108>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0xd8>
			GPIOD_PCLK_DI();
 80003b6:	4b0c      	ldr	r3, [pc, #48]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ba:	4a0b      	ldr	r2, [pc, #44]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 80003bc:	f023 0308 	bic.w	r3, r3, #8
 80003c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c2:	e009      	b.n	80003d8 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOE)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a0c      	ldr	r2, [pc, #48]	; (80003f8 <GPIO_PeriClockControl+0x10c>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d105      	bne.n	80003d8 <GPIO_PeriClockControl+0xec>
			GPIOE_PCLK_DI();
 80003cc:	4b06      	ldr	r3, [pc, #24]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a05      	ldr	r2, [pc, #20]	; (80003e8 <GPIO_PeriClockControl+0xfc>)
 80003d2:	f023 0310 	bic.w	r3, r3, #16
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d8:	bf00      	nop
 80003da:	370c      	adds	r7, #12
 80003dc:	46bd      	mov	sp, r7
 80003de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e2:	4770      	bx	lr
 80003e4:	40020000 	.word	0x40020000
 80003e8:	40023800 	.word	0x40023800
 80003ec:	40020400 	.word	0x40020400
 80003f0:	40020800 	.word	0x40020800
 80003f4:	40020c00 	.word	0x40020c00
 80003f8:	40021000 	.word	0x40021000

080003fc <GPIO_Init>:
 *
 * @Note			- none
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003fc:	b480      	push	{r7}
 80003fe:	b087      	sub	sp, #28
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]

		uint32_t temp = 0;
 8000404:	2300      	movs	r3, #0
 8000406:	617b      	str	r3, [r7, #20]

		//1.configure the mode of gpio pin
		if(pGPIOHandle->pGPIO_PinConfig->GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	685b      	ldr	r3, [r3, #4]
 800040c:	785b      	ldrb	r3, [r3, #1]
 800040e:	2b03      	cmp	r3, #3
 8000410:	d822      	bhi.n	8000458 <GPIO_Init+0x5c>
		{
			//the non-interrupt mode
			temp = (pGPIOHandle->pGPIO_PinConfig->GPIO_PinMode << (2 * pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber));
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	685b      	ldr	r3, [r3, #4]
 8000416:	785b      	ldrb	r3, [r3, #1]
 8000418:	461a      	mov	r2, r3
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	685b      	ldr	r3, [r3, #4]
 800041e:	781b      	ldrb	r3, [r3, #0]
 8000420:	005b      	lsls	r3, r3, #1
 8000422:	fa02 f303 	lsl.w	r3, r2, r3
 8000426:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);//clearing
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	681a      	ldr	r2, [r3, #0]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	685b      	ldr	r3, [r3, #4]
 8000432:	781b      	ldrb	r3, [r3, #0]
 8000434:	4619      	mov	r1, r3
 8000436:	2303      	movs	r3, #3
 8000438:	408b      	lsls	r3, r1
 800043a:	43db      	mvns	r3, r3
 800043c:	4619      	mov	r1, r3
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	400a      	ands	r2, r1
 8000444:	601a      	str	r2, [r3, #0]
			pGPIOHandle->pGPIOx->MODER |= temp;//setting
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	6819      	ldr	r1, [r3, #0]
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	697a      	ldr	r2, [r7, #20]
 8000452:	430a      	orrs	r2, r1
 8000454:	601a      	str	r2, [r3, #0]
 8000456:	e0b3      	b.n	80005c0 <GPIO_Init+0x1c4>

		}
		else
		{
			//this part will code later. (interrupt mode)
			if((pGPIOHandle->pGPIO_PinConfig->GPIO_PinMode) == GPIO_MODE_IT_FT)
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	685b      	ldr	r3, [r3, #4]
 800045c:	785b      	ldrb	r3, [r3, #1]
 800045e:	2b04      	cmp	r3, #4
 8000460:	d119      	bne.n	8000496 <GPIO_Init+0x9a>
			{
				//configure the FTSR
				EXTI->FTSR |= (1<< pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);
 8000462:	4b42      	ldr	r3, [pc, #264]	; (800056c <GPIO_Init+0x170>)
 8000464:	68db      	ldr	r3, [r3, #12]
 8000466:	687a      	ldr	r2, [r7, #4]
 8000468:	6852      	ldr	r2, [r2, #4]
 800046a:	7812      	ldrb	r2, [r2, #0]
 800046c:	4611      	mov	r1, r2
 800046e:	2201      	movs	r2, #1
 8000470:	408a      	lsls	r2, r1
 8000472:	4611      	mov	r1, r2
 8000474:	4a3d      	ldr	r2, [pc, #244]	; (800056c <GPIO_Init+0x170>)
 8000476:	430b      	orrs	r3, r1
 8000478:	60d3      	str	r3, [r2, #12]
				//Clear the corresponding RTSR bit
				EXTI->RTSR &= ~(1<< pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);
 800047a:	4b3c      	ldr	r3, [pc, #240]	; (800056c <GPIO_Init+0x170>)
 800047c:	689b      	ldr	r3, [r3, #8]
 800047e:	687a      	ldr	r2, [r7, #4]
 8000480:	6852      	ldr	r2, [r2, #4]
 8000482:	7812      	ldrb	r2, [r2, #0]
 8000484:	4611      	mov	r1, r2
 8000486:	2201      	movs	r2, #1
 8000488:	408a      	lsls	r2, r1
 800048a:	43d2      	mvns	r2, r2
 800048c:	4611      	mov	r1, r2
 800048e:	4a37      	ldr	r2, [pc, #220]	; (800056c <GPIO_Init+0x170>)
 8000490:	400b      	ands	r3, r1
 8000492:	6093      	str	r3, [r2, #8]
 8000494:	e03b      	b.n	800050e <GPIO_Init+0x112>
			}
			else if(pGPIOHandle->pGPIO_PinConfig->GPIO_PinMode == GPIO_MODE_IT_RT)
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	685b      	ldr	r3, [r3, #4]
 800049a:	785b      	ldrb	r3, [r3, #1]
 800049c:	2b05      	cmp	r3, #5
 800049e:	d119      	bne.n	80004d4 <GPIO_Init+0xd8>
			{
				//configure the RTSR
				EXTI->RTSR |= (1<< pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);
 80004a0:	4b32      	ldr	r3, [pc, #200]	; (800056c <GPIO_Init+0x170>)
 80004a2:	689b      	ldr	r3, [r3, #8]
 80004a4:	687a      	ldr	r2, [r7, #4]
 80004a6:	6852      	ldr	r2, [r2, #4]
 80004a8:	7812      	ldrb	r2, [r2, #0]
 80004aa:	4611      	mov	r1, r2
 80004ac:	2201      	movs	r2, #1
 80004ae:	408a      	lsls	r2, r1
 80004b0:	4611      	mov	r1, r2
 80004b2:	4a2e      	ldr	r2, [pc, #184]	; (800056c <GPIO_Init+0x170>)
 80004b4:	430b      	orrs	r3, r1
 80004b6:	6093      	str	r3, [r2, #8]
				//Clear the corresponding FTSR bit
				EXTI->FTSR &= ~(1<< pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);
 80004b8:	4b2c      	ldr	r3, [pc, #176]	; (800056c <GPIO_Init+0x170>)
 80004ba:	68db      	ldr	r3, [r3, #12]
 80004bc:	687a      	ldr	r2, [r7, #4]
 80004be:	6852      	ldr	r2, [r2, #4]
 80004c0:	7812      	ldrb	r2, [r2, #0]
 80004c2:	4611      	mov	r1, r2
 80004c4:	2201      	movs	r2, #1
 80004c6:	408a      	lsls	r2, r1
 80004c8:	43d2      	mvns	r2, r2
 80004ca:	4611      	mov	r1, r2
 80004cc:	4a27      	ldr	r2, [pc, #156]	; (800056c <GPIO_Init+0x170>)
 80004ce:	400b      	ands	r3, r1
 80004d0:	60d3      	str	r3, [r2, #12]
 80004d2:	e01c      	b.n	800050e <GPIO_Init+0x112>
			}
			else if(pGPIOHandle->pGPIO_PinConfig->GPIO_PinMode == GPIO_MODE_IT_RFT)
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	685b      	ldr	r3, [r3, #4]
 80004d8:	785b      	ldrb	r3, [r3, #1]
 80004da:	2b06      	cmp	r3, #6
 80004dc:	d117      	bne.n	800050e <GPIO_Init+0x112>
			{
				//configure both FTSR and RTSR
				EXTI->FTSR |= (1<< pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);
 80004de:	4b23      	ldr	r3, [pc, #140]	; (800056c <GPIO_Init+0x170>)
 80004e0:	68db      	ldr	r3, [r3, #12]
 80004e2:	687a      	ldr	r2, [r7, #4]
 80004e4:	6852      	ldr	r2, [r2, #4]
 80004e6:	7812      	ldrb	r2, [r2, #0]
 80004e8:	4611      	mov	r1, r2
 80004ea:	2201      	movs	r2, #1
 80004ec:	408a      	lsls	r2, r1
 80004ee:	4611      	mov	r1, r2
 80004f0:	4a1e      	ldr	r2, [pc, #120]	; (800056c <GPIO_Init+0x170>)
 80004f2:	430b      	orrs	r3, r1
 80004f4:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR |= (1<< pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);
 80004f6:	4b1d      	ldr	r3, [pc, #116]	; (800056c <GPIO_Init+0x170>)
 80004f8:	689b      	ldr	r3, [r3, #8]
 80004fa:	687a      	ldr	r2, [r7, #4]
 80004fc:	6852      	ldr	r2, [r2, #4]
 80004fe:	7812      	ldrb	r2, [r2, #0]
 8000500:	4611      	mov	r1, r2
 8000502:	2201      	movs	r2, #1
 8000504:	408a      	lsls	r2, r1
 8000506:	4611      	mov	r1, r2
 8000508:	4a18      	ldr	r2, [pc, #96]	; (800056c <GPIO_Init+0x170>)
 800050a:	430b      	orrs	r3, r1
 800050c:	6093      	str	r3, [r2, #8]

			}

			//2. configure the GPIO port selection in SYSCFG_EXTICR
			uint8_t temp1 = pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber / 4;
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	685b      	ldr	r3, [r3, #4]
 8000512:	781b      	ldrb	r3, [r3, #0]
 8000514:	089b      	lsrs	r3, r3, #2
 8000516:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber % 4;
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	685b      	ldr	r3, [r3, #4]
 800051c:	781b      	ldrb	r3, [r3, #0]
 800051e:	f003 0303 	and.w	r3, r3, #3
 8000522:	74bb      	strb	r3, [r7, #18]
			uint8_t portCode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	4a11      	ldr	r2, [pc, #68]	; (8000570 <GPIO_Init+0x174>)
 800052a:	4293      	cmp	r3, r2
 800052c:	d02a      	beq.n	8000584 <GPIO_Init+0x188>
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	4a10      	ldr	r2, [pc, #64]	; (8000574 <GPIO_Init+0x178>)
 8000534:	4293      	cmp	r3, r2
 8000536:	d016      	beq.n	8000566 <GPIO_Init+0x16a>
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	4a0e      	ldr	r2, [pc, #56]	; (8000578 <GPIO_Init+0x17c>)
 800053e:	4293      	cmp	r3, r2
 8000540:	d00f      	beq.n	8000562 <GPIO_Init+0x166>
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	4a0d      	ldr	r2, [pc, #52]	; (800057c <GPIO_Init+0x180>)
 8000548:	4293      	cmp	r3, r2
 800054a:	d008      	beq.n	800055e <GPIO_Init+0x162>
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4a0b      	ldr	r2, [pc, #44]	; (8000580 <GPIO_Init+0x184>)
 8000552:	4293      	cmp	r3, r2
 8000554:	d101      	bne.n	800055a <GPIO_Init+0x15e>
 8000556:	2304      	movs	r3, #4
 8000558:	e015      	b.n	8000586 <GPIO_Init+0x18a>
 800055a:	2300      	movs	r3, #0
 800055c:	e013      	b.n	8000586 <GPIO_Init+0x18a>
 800055e:	2303      	movs	r3, #3
 8000560:	e011      	b.n	8000586 <GPIO_Init+0x18a>
 8000562:	2302      	movs	r3, #2
 8000564:	e00f      	b.n	8000586 <GPIO_Init+0x18a>
 8000566:	2301      	movs	r3, #1
 8000568:	e00d      	b.n	8000586 <GPIO_Init+0x18a>
 800056a:	bf00      	nop
 800056c:	40013c00 	.word	0x40013c00
 8000570:	40020000 	.word	0x40020000
 8000574:	40020400 	.word	0x40020400
 8000578:	40020800 	.word	0x40020800
 800057c:	40020c00 	.word	0x40020c00
 8000580:	40021000 	.word	0x40021000
 8000584:	2300      	movs	r3, #0
 8000586:	747b      	strb	r3, [r7, #17]
			SYSCFG_PCLK_EN();
 8000588:	4b66      	ldr	r3, [pc, #408]	; (8000724 <GPIO_Init+0x328>)
 800058a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800058c:	4a65      	ldr	r2, [pc, #404]	; (8000724 <GPIO_Init+0x328>)
 800058e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000592:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1] = portCode << (temp2 * 4);
 8000594:	7c7a      	ldrb	r2, [r7, #17]
 8000596:	7cbb      	ldrb	r3, [r7, #18]
 8000598:	009b      	lsls	r3, r3, #2
 800059a:	fa02 f103 	lsl.w	r1, r2, r3
 800059e:	4a62      	ldr	r2, [pc, #392]	; (8000728 <GPIO_Init+0x32c>)
 80005a0:	7cfb      	ldrb	r3, [r7, #19]
 80005a2:	3302      	adds	r3, #2
 80005a4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

			//3. enable the exti interrupt delivery using IMR
			EXTI->IMR |= (1<< pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);
 80005a8:	4b60      	ldr	r3, [pc, #384]	; (800072c <GPIO_Init+0x330>)
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	687a      	ldr	r2, [r7, #4]
 80005ae:	6852      	ldr	r2, [r2, #4]
 80005b0:	7812      	ldrb	r2, [r2, #0]
 80005b2:	4611      	mov	r1, r2
 80005b4:	2201      	movs	r2, #1
 80005b6:	408a      	lsls	r2, r1
 80005b8:	4611      	mov	r1, r2
 80005ba:	4a5c      	ldr	r2, [pc, #368]	; (800072c <GPIO_Init+0x330>)
 80005bc:	430b      	orrs	r3, r1
 80005be:	6013      	str	r3, [r2, #0]

		}

		temp = 0;
 80005c0:	2300      	movs	r3, #0
 80005c2:	617b      	str	r3, [r7, #20]

		//2. configure the speed
		temp = (pGPIOHandle->pGPIO_PinConfig->GPIO_PinSpeed << (2 * pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber));
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	685b      	ldr	r3, [r3, #4]
 80005c8:	789b      	ldrb	r3, [r3, #2]
 80005ca:	461a      	mov	r2, r3
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	685b      	ldr	r3, [r3, #4]
 80005d0:	781b      	ldrb	r3, [r3, #0]
 80005d2:	005b      	lsls	r3, r3, #1
 80005d4:	fa02 f303 	lsl.w	r3, r2, r3
 80005d8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);//clearing
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	689a      	ldr	r2, [r3, #8]
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	685b      	ldr	r3, [r3, #4]
 80005e4:	781b      	ldrb	r3, [r3, #0]
 80005e6:	4619      	mov	r1, r3
 80005e8:	2303      	movs	r3, #3
 80005ea:	408b      	lsls	r3, r1
 80005ec:	43db      	mvns	r3, r3
 80005ee:	4619      	mov	r1, r3
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	400a      	ands	r2, r1
 80005f6:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= temp;//setting
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	6899      	ldr	r1, [r3, #8]
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	697a      	ldr	r2, [r7, #20]
 8000604:	430a      	orrs	r2, r1
 8000606:	609a      	str	r2, [r3, #8]

		temp = 0;
 8000608:	2300      	movs	r3, #0
 800060a:	617b      	str	r3, [r7, #20]

		//3. configure the pupd settings
		temp = (pGPIOHandle->pGPIO_PinConfig->GPIO_PinPupdControl << (2 * pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber));
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	685b      	ldr	r3, [r3, #4]
 8000610:	78db      	ldrb	r3, [r3, #3]
 8000612:	461a      	mov	r2, r3
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	685b      	ldr	r3, [r3, #4]
 8000618:	781b      	ldrb	r3, [r3, #0]
 800061a:	005b      	lsls	r3, r3, #1
 800061c:	fa02 f303 	lsl.w	r3, r2, r3
 8000620:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);//clearing
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	68da      	ldr	r2, [r3, #12]
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	685b      	ldr	r3, [r3, #4]
 800062c:	781b      	ldrb	r3, [r3, #0]
 800062e:	4619      	mov	r1, r3
 8000630:	2303      	movs	r3, #3
 8000632:	408b      	lsls	r3, r1
 8000634:	43db      	mvns	r3, r3
 8000636:	4619      	mov	r1, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	400a      	ands	r2, r1
 800063e:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |= temp;//setting
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	68d9      	ldr	r1, [r3, #12]
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	697a      	ldr	r2, [r7, #20]
 800064c:	430a      	orrs	r2, r1
 800064e:	60da      	str	r2, [r3, #12]

		temp = 0;
 8000650:	2300      	movs	r3, #0
 8000652:	617b      	str	r3, [r7, #20]

		//4. configure the output type
		temp = (pGPIOHandle->pGPIO_PinConfig->GPIO_PinOPType << (pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber));
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	685b      	ldr	r3, [r3, #4]
 8000658:	791b      	ldrb	r3, [r3, #4]
 800065a:	461a      	mov	r2, r3
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	685b      	ldr	r3, [r3, #4]
 8000660:	781b      	ldrb	r3, [r3, #0]
 8000662:	fa02 f303 	lsl.w	r3, r2, r3
 8000666:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber);//clearing
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	685a      	ldr	r2, [r3, #4]
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	685b      	ldr	r3, [r3, #4]
 8000672:	781b      	ldrb	r3, [r3, #0]
 8000674:	4619      	mov	r1, r3
 8000676:	2303      	movs	r3, #3
 8000678:	408b      	lsls	r3, r1
 800067a:	43db      	mvns	r3, r3
 800067c:	4619      	mov	r1, r3
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	400a      	ands	r2, r1
 8000684:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;//	setting
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	6859      	ldr	r1, [r3, #4]
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	697a      	ldr	r2, [r7, #20]
 8000692:	430a      	orrs	r2, r1
 8000694:	605a      	str	r2, [r3, #4]

		temp = 0;
 8000696:	2300      	movs	r3, #0
 8000698:	617b      	str	r3, [r7, #20]

		//5. configure the alternate functionality
		if(pGPIOHandle->pGPIO_PinConfig->GPIO_PinMode == GPIO_MODE_ALTFN)
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	685b      	ldr	r3, [r3, #4]
 800069e:	785b      	ldrb	r3, [r3, #1]
 80006a0:	2b02      	cmp	r3, #2
 80006a2:	d139      	bne.n	8000718 <GPIO_Init+0x31c>
		{
			//Configure the alternate function registers
			 if(pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber){
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	685b      	ldr	r3, [r3, #4]
 80006a8:	781b      	ldrb	r3, [r3, #0]
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	d034      	beq.n	8000718 <GPIO_Init+0x31c>

				 //configure the alt function registers
				 uint8_t temp1, temp2;

				 temp1 = pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber / 8;
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	685b      	ldr	r3, [r3, #4]
 80006b2:	781b      	ldrb	r3, [r3, #0]
 80006b4:	08db      	lsrs	r3, r3, #3
 80006b6:	743b      	strb	r3, [r7, #16]
				 temp2 = pGPIOHandle->pGPIO_PinConfig->GPIO_PinNumber % 8;
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	685b      	ldr	r3, [r3, #4]
 80006bc:	781b      	ldrb	r3, [r3, #0]
 80006be:	f003 0307 	and.w	r3, r3, #7
 80006c2:	73fb      	strb	r3, [r7, #15]
				 pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	7c3a      	ldrb	r2, [r7, #16]
 80006ca:	3208      	adds	r2, #8
 80006cc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006d0:	7bfb      	ldrb	r3, [r7, #15]
 80006d2:	009b      	lsls	r3, r3, #2
 80006d4:	220f      	movs	r2, #15
 80006d6:	fa02 f303 	lsl.w	r3, r2, r3
 80006da:	43db      	mvns	r3, r3
 80006dc:	4618      	mov	r0, r3
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	7c3a      	ldrb	r2, [r7, #16]
 80006e4:	4001      	ands	r1, r0
 80006e6:	3208      	adds	r2, #8
 80006e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
				 pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->pGPIO_PinConfig->GPIO_PinAltFunMode << (4 * temp2));
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	7c3a      	ldrb	r2, [r7, #16]
 80006f2:	3208      	adds	r2, #8
 80006f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	685b      	ldr	r3, [r3, #4]
 80006fc:	795b      	ldrb	r3, [r3, #5]
 80006fe:	461a      	mov	r2, r3
 8000700:	7bfb      	ldrb	r3, [r7, #15]
 8000702:	009b      	lsls	r3, r3, #2
 8000704:	fa02 f303 	lsl.w	r3, r2, r3
 8000708:	4618      	mov	r0, r3
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	7c3a      	ldrb	r2, [r7, #16]
 8000710:	4301      	orrs	r1, r0
 8000712:	3208      	adds	r2, #8
 8000714:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			 }
		}
}
 8000718:	bf00      	nop
 800071a:	371c      	adds	r7, #28
 800071c:	46bd      	mov	sp, r7
 800071e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000722:	4770      	bx	lr
 8000724:	40023800 	.word	0x40023800
 8000728:	40013800 	.word	0x40013800
 800072c:	40013c00 	.word	0x40013c00

08000730 <GPIO_ToggleOutputPin>:
 *
 * @Note			- none
 */

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000730:	b480      	push	{r7}
 8000732:	b083      	sub	sp, #12
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
 8000738:	460b      	mov	r3, r1
 800073a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	695b      	ldr	r3, [r3, #20]
 8000740:	78fa      	ldrb	r2, [r7, #3]
 8000742:	2101      	movs	r1, #1
 8000744:	fa01 f202 	lsl.w	r2, r1, r2
 8000748:	405a      	eors	r2, r3
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	615a      	str	r2, [r3, #20]
}
 800074e:	bf00      	nop
 8000750:	370c      	adds	r7, #12
 8000752:	46bd      	mov	sp, r7
 8000754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000758:	4770      	bx	lr
	...

0800075c <GPIO_IRQConfig>:
 *
 * @Note			- none
 */

void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 800075c:	b480      	push	{r7}
 800075e:	b083      	sub	sp, #12
 8000760:	af00      	add	r7, sp, #0
 8000762:	4603      	mov	r3, r0
 8000764:	460a      	mov	r2, r1
 8000766:	71fb      	strb	r3, [r7, #7]
 8000768:	4613      	mov	r3, r2
 800076a:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 800076c:	79bb      	ldrb	r3, [r7, #6]
 800076e:	2b01      	cmp	r3, #1
 8000770:	d133      	bne.n	80007da <GPIO_IRQConfig+0x7e>
	{
		if(IRQNumber <= 31)
 8000772:	79fb      	ldrb	r3, [r7, #7]
 8000774:	2b1f      	cmp	r3, #31
 8000776:	d80a      	bhi.n	800078e <GPIO_IRQConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= (1 << IRQNumber );
 8000778:	4b35      	ldr	r3, [pc, #212]	; (8000850 <GPIO_IRQConfig+0xf4>)
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	79fa      	ldrb	r2, [r7, #7]
 800077e:	2101      	movs	r1, #1
 8000780:	fa01 f202 	lsl.w	r2, r1, r2
 8000784:	4611      	mov	r1, r2
 8000786:	4a32      	ldr	r2, [pc, #200]	; (8000850 <GPIO_IRQConfig+0xf4>)
 8000788:	430b      	orrs	r3, r1
 800078a:	6013      	str	r3, [r2, #0]
				{
					//program ICER2 register
					*NVIC_ICER2 |= (1 << (IRQNumber % 64));
				}
	}
}
 800078c:	e059      	b.n	8000842 <GPIO_IRQConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)//32 to 63
 800078e:	79fb      	ldrb	r3, [r7, #7]
 8000790:	2b1f      	cmp	r3, #31
 8000792:	d90f      	bls.n	80007b4 <GPIO_IRQConfig+0x58>
 8000794:	79fb      	ldrb	r3, [r7, #7]
 8000796:	2b3f      	cmp	r3, #63	; 0x3f
 8000798:	d80c      	bhi.n	80007b4 <GPIO_IRQConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32 ));
 800079a:	4b2e      	ldr	r3, [pc, #184]	; (8000854 <GPIO_IRQConfig+0xf8>)
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	79fa      	ldrb	r2, [r7, #7]
 80007a0:	f002 021f 	and.w	r2, r2, #31
 80007a4:	2101      	movs	r1, #1
 80007a6:	fa01 f202 	lsl.w	r2, r1, r2
 80007aa:	4611      	mov	r1, r2
 80007ac:	4a29      	ldr	r2, [pc, #164]	; (8000854 <GPIO_IRQConfig+0xf8>)
 80007ae:	430b      	orrs	r3, r1
 80007b0:	6013      	str	r3, [r2, #0]
 80007b2:	e046      	b.n	8000842 <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber <96)
 80007b4:	79fb      	ldrb	r3, [r7, #7]
 80007b6:	2b3f      	cmp	r3, #63	; 0x3f
 80007b8:	d943      	bls.n	8000842 <GPIO_IRQConfig+0xe6>
 80007ba:	79fb      	ldrb	r3, [r7, #7]
 80007bc:	2b5f      	cmp	r3, #95	; 0x5f
 80007be:	d840      	bhi.n	8000842 <GPIO_IRQConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 80007c0:	4b25      	ldr	r3, [pc, #148]	; (8000858 <GPIO_IRQConfig+0xfc>)
 80007c2:	681b      	ldr	r3, [r3, #0]
 80007c4:	79fa      	ldrb	r2, [r7, #7]
 80007c6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007ca:	2101      	movs	r1, #1
 80007cc:	fa01 f202 	lsl.w	r2, r1, r2
 80007d0:	4611      	mov	r1, r2
 80007d2:	4a21      	ldr	r2, [pc, #132]	; (8000858 <GPIO_IRQConfig+0xfc>)
 80007d4:	430b      	orrs	r3, r1
 80007d6:	6013      	str	r3, [r2, #0]
}
 80007d8:	e033      	b.n	8000842 <GPIO_IRQConfig+0xe6>
				if(IRQNumber <= 31)
 80007da:	79fb      	ldrb	r3, [r7, #7]
 80007dc:	2b1f      	cmp	r3, #31
 80007de:	d80a      	bhi.n	80007f6 <GPIO_IRQConfig+0x9a>
					*NVIC_ICER0 |= (1 << IRQNumber );
 80007e0:	4b1e      	ldr	r3, [pc, #120]	; (800085c <GPIO_IRQConfig+0x100>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	79fa      	ldrb	r2, [r7, #7]
 80007e6:	2101      	movs	r1, #1
 80007e8:	fa01 f202 	lsl.w	r2, r1, r2
 80007ec:	4611      	mov	r1, r2
 80007ee:	4a1b      	ldr	r2, [pc, #108]	; (800085c <GPIO_IRQConfig+0x100>)
 80007f0:	430b      	orrs	r3, r1
 80007f2:	6013      	str	r3, [r2, #0]
}
 80007f4:	e025      	b.n	8000842 <GPIO_IRQConfig+0xe6>
				else if(IRQNumber > 31 && IRQNumber <64)
 80007f6:	79fb      	ldrb	r3, [r7, #7]
 80007f8:	2b1f      	cmp	r3, #31
 80007fa:	d90f      	bls.n	800081c <GPIO_IRQConfig+0xc0>
 80007fc:	79fb      	ldrb	r3, [r7, #7]
 80007fe:	2b3f      	cmp	r3, #63	; 0x3f
 8000800:	d80c      	bhi.n	800081c <GPIO_IRQConfig+0xc0>
					*NVIC_ICER1 |= (1 << (IRQNumber % 32 ));
 8000802:	4b17      	ldr	r3, [pc, #92]	; (8000860 <GPIO_IRQConfig+0x104>)
 8000804:	681b      	ldr	r3, [r3, #0]
 8000806:	79fa      	ldrb	r2, [r7, #7]
 8000808:	f002 021f 	and.w	r2, r2, #31
 800080c:	2101      	movs	r1, #1
 800080e:	fa01 f202 	lsl.w	r2, r1, r2
 8000812:	4611      	mov	r1, r2
 8000814:	4a12      	ldr	r2, [pc, #72]	; (8000860 <GPIO_IRQConfig+0x104>)
 8000816:	430b      	orrs	r3, r1
 8000818:	6013      	str	r3, [r2, #0]
 800081a:	e012      	b.n	8000842 <GPIO_IRQConfig+0xe6>
				else if(IRQNumber >= 64 && IRQNumber <96)
 800081c:	79fb      	ldrb	r3, [r7, #7]
 800081e:	2b3f      	cmp	r3, #63	; 0x3f
 8000820:	d90f      	bls.n	8000842 <GPIO_IRQConfig+0xe6>
 8000822:	79fb      	ldrb	r3, [r7, #7]
 8000824:	2b5f      	cmp	r3, #95	; 0x5f
 8000826:	d80c      	bhi.n	8000842 <GPIO_IRQConfig+0xe6>
					*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000828:	4b0e      	ldr	r3, [pc, #56]	; (8000864 <GPIO_IRQConfig+0x108>)
 800082a:	681b      	ldr	r3, [r3, #0]
 800082c:	79fa      	ldrb	r2, [r7, #7]
 800082e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000832:	2101      	movs	r1, #1
 8000834:	fa01 f202 	lsl.w	r2, r1, r2
 8000838:	4611      	mov	r1, r2
 800083a:	4a0a      	ldr	r2, [pc, #40]	; (8000864 <GPIO_IRQConfig+0x108>)
 800083c:	430b      	orrs	r3, r1
 800083e:	6013      	str	r3, [r2, #0]
}
 8000840:	e7ff      	b.n	8000842 <GPIO_IRQConfig+0xe6>
 8000842:	bf00      	nop
 8000844:	370c      	adds	r7, #12
 8000846:	46bd      	mov	sp, r7
 8000848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	e000e100 	.word	0xe000e100
 8000854:	e000e104 	.word	0xe000e104
 8000858:	e000e108 	.word	0xe000e108
 800085c:	e000e180 	.word	0xe000e180
 8000860:	e000e184 	.word	0xe000e184
 8000864:	e000e188 	.word	0xe000e188

08000868 <GPIO_IRQPriorityConfig>:
 *
 * @return			- none
 *
 * @Note			- none
 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority ){
 8000868:	b480      	push	{r7}
 800086a:	b085      	sub	sp, #20
 800086c:	af00      	add	r7, sp, #0
 800086e:	4603      	mov	r3, r0
 8000870:	460a      	mov	r2, r1
 8000872:	71fb      	strb	r3, [r7, #7]
 8000874:	4613      	mov	r3, r2
 8000876:	71bb      	strb	r3, [r7, #6]

	//1. first lets find out the ipr register
	uint8_t iprx = IRQNumber /4;
 8000878:	79fb      	ldrb	r3, [r7, #7]
 800087a:	089b      	lsrs	r3, r3, #2
 800087c:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 800087e:	79fb      	ldrb	r3, [r7, #7]
 8000880:	f003 0303 	and.w	r3, r3, #3
 8000884:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000886:	7bbb      	ldrb	r3, [r7, #14]
 8000888:	00db      	lsls	r3, r3, #3
 800088a:	b2db      	uxtb	r3, r3
 800088c:	3304      	adds	r3, #4
 800088e:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + (iprx)) |= (IRQPriority << shift_amount);
 8000890:	7bfb      	ldrb	r3, [r7, #15]
 8000892:	009b      	lsls	r3, r3, #2
 8000894:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000898:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800089c:	681a      	ldr	r2, [r3, #0]
 800089e:	79b9      	ldrb	r1, [r7, #6]
 80008a0:	7b7b      	ldrb	r3, [r7, #13]
 80008a2:	fa01 f303 	lsl.w	r3, r1, r3
 80008a6:	4619      	mov	r1, r3
 80008a8:	7bfb      	ldrb	r3, [r7, #15]
 80008aa:	009b      	lsls	r3, r3, #2
 80008ac:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80008b0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008b4:	430a      	orrs	r2, r1
 80008b6:	601a      	str	r2, [r3, #0]
}
 80008b8:	bf00      	nop
 80008ba:	3714      	adds	r7, #20
 80008bc:	46bd      	mov	sp, r7
 80008be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008c2:	4770      	bx	lr

080008c4 <GPIO_IRQHandling>:
 *
 * @Note			- none
 */

void GPIO_IRQHandling(uint8_t PinNumber)
{
 80008c4:	b480      	push	{r7}
 80008c6:	b083      	sub	sp, #12
 80008c8:	af00      	add	r7, sp, #0
 80008ca:	4603      	mov	r3, r0
 80008cc:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & (1 << PinNumber))
 80008ce:	4b0c      	ldr	r3, [pc, #48]	; (8000900 <GPIO_IRQHandling+0x3c>)
 80008d0:	695b      	ldr	r3, [r3, #20]
 80008d2:	79fa      	ldrb	r2, [r7, #7]
 80008d4:	2101      	movs	r1, #1
 80008d6:	fa01 f202 	lsl.w	r2, r1, r2
 80008da:	4013      	ands	r3, r2
 80008dc:	2b00      	cmp	r3, #0
 80008de:	d009      	beq.n	80008f4 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= (1 << PinNumber);
 80008e0:	4b07      	ldr	r3, [pc, #28]	; (8000900 <GPIO_IRQHandling+0x3c>)
 80008e2:	695b      	ldr	r3, [r3, #20]
 80008e4:	79fa      	ldrb	r2, [r7, #7]
 80008e6:	2101      	movs	r1, #1
 80008e8:	fa01 f202 	lsl.w	r2, r1, r2
 80008ec:	4611      	mov	r1, r2
 80008ee:	4a04      	ldr	r2, [pc, #16]	; (8000900 <GPIO_IRQHandling+0x3c>)
 80008f0:	430b      	orrs	r3, r1
 80008f2:	6153      	str	r3, [r2, #20]
	}
}
 80008f4:	bf00      	nop
 80008f6:	370c      	adds	r7, #12
 80008f8:	46bd      	mov	sp, r7
 80008fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008fe:	4770      	bx	lr
 8000900:	40013c00 	.word	0x40013c00

08000904 <__libc_init_array>:
 8000904:	b570      	push	{r4, r5, r6, lr}
 8000906:	4d0d      	ldr	r5, [pc, #52]	; (800093c <__libc_init_array+0x38>)
 8000908:	4c0d      	ldr	r4, [pc, #52]	; (8000940 <__libc_init_array+0x3c>)
 800090a:	1b64      	subs	r4, r4, r5
 800090c:	10a4      	asrs	r4, r4, #2
 800090e:	2600      	movs	r6, #0
 8000910:	42a6      	cmp	r6, r4
 8000912:	d109      	bne.n	8000928 <__libc_init_array+0x24>
 8000914:	4d0b      	ldr	r5, [pc, #44]	; (8000944 <__libc_init_array+0x40>)
 8000916:	4c0c      	ldr	r4, [pc, #48]	; (8000948 <__libc_init_array+0x44>)
 8000918:	f000 f820 	bl	800095c <_init>
 800091c:	1b64      	subs	r4, r4, r5
 800091e:	10a4      	asrs	r4, r4, #2
 8000920:	2600      	movs	r6, #0
 8000922:	42a6      	cmp	r6, r4
 8000924:	d105      	bne.n	8000932 <__libc_init_array+0x2e>
 8000926:	bd70      	pop	{r4, r5, r6, pc}
 8000928:	f855 3b04 	ldr.w	r3, [r5], #4
 800092c:	4798      	blx	r3
 800092e:	3601      	adds	r6, #1
 8000930:	e7ee      	b.n	8000910 <__libc_init_array+0xc>
 8000932:	f855 3b04 	ldr.w	r3, [r5], #4
 8000936:	4798      	blx	r3
 8000938:	3601      	adds	r6, #1
 800093a:	e7f2      	b.n	8000922 <__libc_init_array+0x1e>
 800093c:	08000974 	.word	0x08000974
 8000940:	08000974 	.word	0x08000974
 8000944:	08000974 	.word	0x08000974
 8000948:	08000978 	.word	0x08000978

0800094c <memset>:
 800094c:	4402      	add	r2, r0
 800094e:	4603      	mov	r3, r0
 8000950:	4293      	cmp	r3, r2
 8000952:	d100      	bne.n	8000956 <memset+0xa>
 8000954:	4770      	bx	lr
 8000956:	f803 1b01 	strb.w	r1, [r3], #1
 800095a:	e7f9      	b.n	8000950 <memset+0x4>

0800095c <_init>:
 800095c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095e:	bf00      	nop
 8000960:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000962:	bc08      	pop	{r3}
 8000964:	469e      	mov	lr, r3
 8000966:	4770      	bx	lr

08000968 <_fini>:
 8000968:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800096a:	bf00      	nop
 800096c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800096e:	bc08      	pop	{r3}
 8000970:	469e      	mov	lr, r3
 8000972:	4770      	bx	lr
